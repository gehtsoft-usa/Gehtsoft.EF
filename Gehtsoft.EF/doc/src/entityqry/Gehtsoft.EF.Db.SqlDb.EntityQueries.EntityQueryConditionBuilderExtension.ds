@class
    @name=EntityQueryConditionBuilderExtension
    @key=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension
    @brief=The syntax-sugar extension for EntityQueryConditionBuilder
    @type=class
    @ingroup=Gehtsoft.EF.Db.SqlDb.EntityQueries
    @sig=T:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension

    This extension class adds methods that simplifies creation of new conditions via
    [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] class.


    @member
        @name=And
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.And(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder)
        @key=And.0
        @divisor=.
        @brief=Adds a new condition using logical AND
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=And
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder
        @end

    @end

    @member
        @name=Or
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.Or(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder)
        @key=Or.0
        @divisor=.
        @brief=Adds a new condition using logical OR
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=Or
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder
        @end
    @end

    @member
        @name=Property
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.Property(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder,System.String)
        @key=Property.0
        @divisor=.
        @brief=Adds a new condition that compares a property path and joins it to prior conditions using AND
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=Property
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, string propertyPath
        @end

        @param
            @name=propertyPath
            The path to the property.

            The [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.ConditionEntityQueryBase]ConditionEntityQueryBase[/clink]
            for details on what is the path to the property.
        @end

    @end

    @member
        @name=PropertyOf
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.PropertyOf(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder,System.String,System.Type,System.Int32)
        @key=PropertyOf.1
        @divisor=.
        @brief=Adds a new condition that compares a property and joins it to prior conditions using And
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=PropertyOf
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, string property, System.Type type = null, int occurrence = 0
        @end
        @declaration
            @language=cs
            @name=PropertyOf<T>
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, string property, int occurrence = 0
        @end

        @param
            @name=property
            The name of the property.
        @end

        @param
            @name=type, T
            The type of the entity. If no type is specified, the first entity in the query is used.
        @end

        @param
            @name=occurrence
            The occurrence of the entity inside of the query (the order in which this entity was added to the query).

            The parameter is used when the entity is referenced by the query more than once, directly (by adding the entity to the query)
            or indirectly (when the entity is added by foreign key of another entity that was added to the query).

            The first occurrence of the entity has index 0.
        @end

    @end

    @member
        @name=Exists
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.Exists(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder,Gehtsoft.EF.Db.SqlDb.QueryBuilder.AQueryBuilder)
        @key=Exists.1
        @divisor=.
        @brief=Adds a new EXISTS condition joins it to prior conditions using AND
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=Exists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder
        @end
        @declaration
            @language=cs
            @name=Exists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, [clink=Gehtsoft.EF.Db.SqlDb.QueryBuilder.AQueryBuilder]AQueryBuilder[/clink] query
        @end
        @declaration
            @language=cs
            @name=Exists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SelectEntitiesQueryBase]SelectEntitiesQueryBase[/clink] query
        @end

        @param
            @name=query

        @end

    @end


    @member
        @name=NotExists
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.NotExists(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder,Gehtsoft.EF.Db.SqlDb.QueryBuilder.AQueryBuilder)
        @key=NotExists.1
        @divisor=.
        @brief=Adds a new NOT EXISTS condition joins it to prior conditions using AND
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=NotExists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder
        @end
        @declaration
            @language=cs
            @name=NotExists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, [clink=Gehtsoft.EF.Db.SqlDb.QueryBuilder.AQueryBuilder]AQueryBuilder[/clink] query
        @end
        @declaration
            @language=cs
            @name=NotExists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=this [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SelectEntitiesQueryBase]SelectEntitiesQueryBase[/clink] query
        @end

        @param
            @name=builder

        @end

        @param
            @name=query

        @end

    @end

    @member
        @name=NotExists
        @sig=M:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilderExtension.NotExists(Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder,Gehtsoft.EF.Db.SqlDb.EntityQueries.SelectEntitiesQueryBase)
        @key=NotExists.0
        @divisor=.
        @brief=
        @scope=class
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=NotExists
            @return=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SingleEntityQueryConditionBuilder]SingleEntityQueryConditionBuilder[/clink]
            @params=[clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityQueryConditionBuilder]EntityQueryConditionBuilder[/clink] builder, [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries.SelectEntitiesQueryBase]SelectEntitiesQueryBase[/clink] query
        @end

        @param
            @name=builder

        @end

        @param
            @name=query

        @end

    @end

    The type defined in the [c]Gehtsoft.EF.Db.SqlDb.dll[/c] assembly.
    The namespace is [clink=Gehtsoft.EF.Db.SqlDb.EntityQueries]Gehtsoft.EF.Db.SqlDb.EntityQueries[/clink].
@end
