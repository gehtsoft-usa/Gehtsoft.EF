<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Gehtsoft.Mapper">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Mapper</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Debug</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Mapper</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Mapper</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.EF.Mapper">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.EF.Mapper</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.EF.Mapper</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.EF.Mapper</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Validator">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Validator</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Validator</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Validator</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Gehtsoft.EF.Mapper">
      <apidata name="Gehtsoft.EF.Mapper" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.EF.Mapper.ActionTarget`2" />
        <element api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" />
        <element api="T:Gehtsoft.EF.Mapper.ConstSource`1" />
        <element api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" />
        <element api="T:Gehtsoft.EF.Mapper.IMappingSource" />
        <element api="T:Gehtsoft.EF.Mapper.IMappingTarget" />
        <element api="T:Gehtsoft.EF.Mapper.IMappingAction" />
        <element api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
        <element api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" />
        <element api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
        <element api="T:Gehtsoft.EF.Mapper.MapClassAttribute" />
        <element api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" />
        <element api="T:Gehtsoft.EF.Mapper.MapSpecificationAttribute" />
        <element api="T:Gehtsoft.EF.Mapper.IMap" />
        <element api="T:Gehtsoft.EF.Mapper.IMapInitializer" />
        <element api="T:Gehtsoft.EF.Mapper.Map`2" />
        <element api="T:Gehtsoft.EF.Mapper.MapExtension" />
        <element api="T:Gehtsoft.EF.Mapper.DoNotAutoMapAttribute" />
        <element api="T:Gehtsoft.EF.Mapper.MapFactory" />
        <element api="T:Gehtsoft.EF.Mapper.ClassToModelInitializer" />
        <element api="T:Gehtsoft.EF.Mapper.IMappingPredicate" />
        <element api="T:Gehtsoft.EF.Mapper.IPropertyMapping" />
        <element api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" />
        <element api="T:Gehtsoft.EF.Mapper.MappingPredicate`1" />
        <element api="T:Gehtsoft.EF.Mapper.NotMappingPredicate" />
        <element api="T:Gehtsoft.EF.Mapper.NeverMappingPredicate" />
        <element api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
        <element api="T:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension" />
        <element api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" />
        <element api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
        <element api="T:Gehtsoft.EF.Mapper.MapFlag" />
        <element api="T:Gehtsoft.EF.Mapper.ValueMapper" />
        <element api="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource" />
        <element api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" />
        <element api="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource" />
        <element api="T:Gehtsoft.EF.Mapper.MapEntityAttribute" />
        <element api="T:Gehtsoft.EF.Mapper.EfMap`2" />
        <element api="T:Gehtsoft.EF.Mapper.EntityMapInitializer" />
      </elements>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ActionTarget`2">
      <apidata name="ActionTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TDestination" />
        <template name="TType" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.ActionTarget`2.Equals(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.EF.Mapper.ActionTarget`2.Set(System.Object,System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.ActionTarget`2.Action" />
        <element api="P:Gehtsoft.EF.Mapper.ActionTarget`2.Name" />
        <element api="P:Gehtsoft.EF.Mapper.ActionTarget`2.ValueType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ActionTarget`2.Action">
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.Action`2" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ActionTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ActionTarget`2.Equals(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ActionTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ActionTarget`2.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingTarget.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ActionTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ActionTarget`2.Set(System.Object,System.Object)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingTarget.Set(System.Object,System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ActionTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ActionTarget`2.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingTarget.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ActionTarget`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor">
      <apidata name="ClassPropertyAccessor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.#ctor(System.Reflection.PropertyInfo)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Set(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Get(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Equals(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Equals(Gehtsoft.EF.Mapper.ClassPropertyAccessor)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Equals(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.GetHashCode" />
        <element api="P:Gehtsoft.EF.Mapper.ClassPropertyAccessor.PropertyInfo" />
        <element api="P:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Name" />
        <element api="P:Gehtsoft.EF.Mapper.ClassPropertyAccessor.ValueType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Equals(Gehtsoft.EF.Mapper.ClassPropertyAccessor)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Equals(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
        <member api="P:Gehtsoft.EF.Mapper.IMappingTarget.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ClassPropertyAccessor.PropertyInfo">
      <apidata name="PropertyInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyInfo" />
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassPropertyAccessor.Set(System.Object,System.Object)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingTarget.Set(System.Object,System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ClassPropertyAccessor.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
        <member api="P:Gehtsoft.EF.Mapper.IMappingTarget.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ClassToModelInitializer">
      <apidata name="ClassToModelInitializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.ClassToModelInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassToModelInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.ClassToModelInitializer.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassToModelInitializer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassToModelInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassToModelInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="ModelToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMapInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)">
          <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassToModelInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ClassToModelInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="SourceToModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMapInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)">
          <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ClassToModelInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ConstSource`1">
      <apidata name="ConstSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TType" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </implements>
      <elements>
        <element api="F:Gehtsoft.EF.Mapper.ConstSource`1.mConst" />
        <element api="M:Gehtsoft.EF.Mapper.ConstSource`1.#ctor(`0)" />
        <element api="M:Gehtsoft.EF.Mapper.ConstSource`1.Get(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.ConstSource`1.Name" />
        <element api="P:Gehtsoft.EF.Mapper.ConstSource`1.ValueType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ConstSource`1.#ctor(`0)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <template name="TType" index="0" api="T:Gehtsoft.EF.Mapper.ConstSource`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ConstSource`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ConstSource`1.Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ConstSource`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.EF.Mapper.ConstSource`1.mConst">
      <apidata name="mConst" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ConstSource`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ConstSource`1.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ConstSource`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ConstSource`1.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ConstSource`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.DoNotAutoMapAttribute">
      <apidata name="DoNotAutoMapAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.DoNotAutoMapAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.DoNotAutoMapAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.DoNotAutoMapAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.EfMap`2">
      <apidata name="EfMap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.EfMap`2" />
              <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.EfMap`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSource" />
        <template name="TDestination" />
      </templates>
      <elements>
        <element api="F:Gehtsoft.EF.Mapper.EfMap`2.mDestinationDescriptor" />
        <element api="M:Gehtsoft.EF.Mapper.EfMap`2.#ctor" />
        <element api="M:Gehtsoft.EF.Mapper.EfMap`2.GetTargetByName(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.AddTarget(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.FindTarget(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.For(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.For``1(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Find(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Find``1(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.ContainsRuleFor(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Assign``1(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.BeforeMapping(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.AfterMapping(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Equals(Gehtsoft.EF.Mapper.Map{`0,`1})" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Equals(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Equals(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.GetHashCode" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0,`1,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0,`1)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#For(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Do(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Do(System.Object,System.Object,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Mappings" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Mappings" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Source" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Destination" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Pre" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Post" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.MapNullToNull" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Factory" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Factory" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EfMap`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EfMap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EfMap`2.GetTargetByName(System.String)">
      <apidata name="GetTargetByName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.EF.Mapper.Map`2.GetTargetByName(System.String)">
          <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.EfMap`2" />
              <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.EfMap`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EfMap`2" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.EF.Mapper.EfMap`2.mDestinationDescriptor">
      <apidata name="mDestinationDescriptor" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.EF.Db.SqlDb.EntityQueries.EntityDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EfMap`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.EntityMapInitializer">
      <apidata name="EntityMapInitializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.EntityMapInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityMapInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityMapInitializer.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityMapInitializer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityMapInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityMapInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="ModelToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMapInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)">
          <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityMapInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityMapInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="SourceToModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMapInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)">
          <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityMapInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource">
      <apidata name="EntityPrimaryKeySource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.#ctor(Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.Get(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.ValueType" />
        <element api="P:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.#ctor(Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="foreignKeyAccessor">
          <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo" ref="true">
            <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.EntityPrimaryKeySource.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor">
      <apidata name="EntityPropertyAccessor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.#ctor(Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Set(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Get(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Equals(Gehtsoft.EF.Mapper.EntityPropertyAccessor)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Equals(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Equals(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.GetHashCode" />
        <element api="P:Gehtsoft.EF.Mapper.EntityPropertyAccessor.ColumnInfo" />
        <element api="P:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Name" />
        <element api="P:Gehtsoft.EF.Mapper.EntityPropertyAccessor.ValueType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.#ctor(Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="columnInfo">
          <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo" ref="true">
            <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.EntityPropertyAccessor.ColumnInfo">
      <apidata name="ColumnInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColumnInfo" />
      <returns>
        <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo" ref="true">
          <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Equals(Gehtsoft.EF.Mapper.EntityPropertyAccessor)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Equals(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
        <member api="P:Gehtsoft.EF.Mapper.IMappingTarget.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EntityPropertyAccessor.Set(System.Object,System.Object)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingTarget.Set(System.Object,System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.EntityPropertyAccessor.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
        <member api="P:Gehtsoft.EF.Mapper.IMappingTarget.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension">
      <apidata name="EnumerableOfPropertyMappingExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension.Ignore``2(System.Collections.Generic.IEnumerable{Gehtsoft.EF.Mapper.PropertyMapping{``0,``1}})" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension.Ignore``2(System.Collections.Generic.IEnumerable{Gehtsoft.EF.Mapper.PropertyMapping{``0,``1}})">
      <apidata name="Ignore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TDestination" />
      </templates>
      <parameters>
        <parameter name="mappings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension.Ignore``2(System.Collections.Generic.IEnumerable{Gehtsoft.EF.Mapper.PropertyMapping{``0,``1}})" />
                  <template name="TDestination" index="1" api="M:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension.Ignore``2(System.Collections.Generic.IEnumerable{Gehtsoft.EF.Mapper.PropertyMapping{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.EnumerableOfPropertyMappingExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ExpressionSource`2">
      <apidata name="ExpressionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.ExpressionSource`2.#ctor(System.Func`2)" />
        <element api="M:Gehtsoft.EF.Mapper.ExpressionSource`2.Get(`0)" />
        <element api="M:Gehtsoft.EF.Mapper.ExpressionSource`2.Gehtsoft#EF#Mapper#IMappingSource#Get(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.ExpressionSource`2.Name" />
        <element api="P:Gehtsoft.EF.Mapper.ExpressionSource`2.ValueType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ExpressionSource`2.#ctor(System.Func`2)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ExpressionSource`2.Gehtsoft#EF#Mapper#IMappingSource#Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ExpressionSource`2.Get(`0)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <template name="TEntity" index="0" api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="1" api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ExpressionSource`2.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ExpressionSource`2.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMap">
      <apidata name="IMap" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMap.For(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object,System.Object,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.IMap.Source" />
        <element api="P:Gehtsoft.EF.Mapper.IMap.Destination" />
        <element api="P:Gehtsoft.EF.Mapper.IMap.Mappings" />
        <element api="P:Gehtsoft.EF.Mapper.IMap.Pre" />
        <element api="P:Gehtsoft.EF.Mapper.IMap.Post" />
        <element api="P:Gehtsoft.EF.Mapper.IMap.Factory" />
        <element api="M:System.IEquatable`1.Equals(`0)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="other">
              <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IEquatable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMap.Destination">
      <apidata name="Destination" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Destination" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object,System.Object)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object,System.Object,System.Boolean)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ignoreNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMap.Factory">
      <apidata name="Factory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Factory" />
      <returns>
        <type api="T:System.Func`2" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMap.For(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMap.Mappings">
      <apidata name="Mappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Mappings" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMap.Post">
      <apidata name="Post" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Post" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMap.Pre">
      <apidata name="Pre" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Pre" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMap.Source">
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMapInitializer">
      <apidata name="IMapInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.ClassToModelInitializer" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.EntityMapInitializer" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMapInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.IMapInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMapInitializer.ModelToSource(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="ModelToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMapInitializer.SourceToModel(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="SourceToModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMapInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMappingAction">
      <apidata name="IMappingAction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMappingAction.Perform(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMappingAction.Perform(System.Object,System.Object)">
      <apidata name="Perform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMappingActionCollection">
      <apidata name="IMappingActionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMappingActionCollection.Add(Gehtsoft.EF.Mapper.IMappingAction)" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingActionCollection.Count" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingActionCollection.Item(System.Int32)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMappingActionCollection.Add(Gehtsoft.EF.Mapper.IMappingAction)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingActionCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingActionCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMappingPredicate">
      <apidata name="IMappingPredicate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.MappingPredicate`1" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.NotMappingPredicate" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.NeverMappingPredicate" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMappingPredicate.Evaluate(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingPredicate.ParameterType" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMappingPredicate.Evaluate(System.Object)">
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMappingSource">
      <apidata name="IMappingSource" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.ConstSource`1" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.ExpressionSource`2" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPrimaryKeySource" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingSource.Name" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IMappingTarget">
      <apidata name="IMappingTarget" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.ActionTarget`2" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.ClassPropertyAccessor" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.EntityPropertyAccessor" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IMappingTarget.Set(System.Object,System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingTarget.Name" />
        <element api="P:Gehtsoft.EF.Mapper.IMappingTarget.ValueType" />
        <element api="M:System.IEquatable`1.Equals(`0)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="other">
              <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IEquatable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingTarget.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IMappingTarget.Set(System.Object,System.Object)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IMappingTarget.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IPropertyMapping">
      <apidata name="IPropertyMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IPropertyMapping.Map(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.IPropertyMapping.Map(System.Object,System.Object,System.Boolean)" />
        <element api="P:Gehtsoft.EF.Mapper.IPropertyMapping.Target" />
        <element api="P:Gehtsoft.EF.Mapper.IPropertyMapping.Source" />
        <element api="P:Gehtsoft.EF.Mapper.IPropertyMapping.WhenPredicate" />
        <element api="P:Gehtsoft.EF.Mapper.IPropertyMapping.MapFlag" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IPropertyMapping.Map(System.Object,System.Object)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IPropertyMapping.Map(System.Object,System.Object,System.Boolean)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ignoreNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IPropertyMapping.MapFlag">
      <apidata name="MapFlag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MapFlag" />
      <setter name="set_MapFlag" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IPropertyMapping.Source">
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IPropertyMapping.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IPropertyMapping.WhenPredicate">
      <apidata name="WhenPredicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WhenPredicate" />
      <setter name="set_WhenPredicate" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection">
      <apidata name="IPropertyMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Add(Gehtsoft.EF.Mapper.IPropertyMapping)" />
        <element api="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Find(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Count" />
        <element api="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Item(System.Int32)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Add(Gehtsoft.EF.Mapper.IPropertyMapping)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Find(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.Map`2">
      <apidata name="Map" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.EF.Mapper.EfMap`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TSource" />
        <template name="TDestination" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.Map`2.#ctor" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.AddTarget(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.FindTarget(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.For(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.For``1(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.GetTargetByName(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Find(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Find``1(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.ContainsRuleFor(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Assign``1(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.BeforeMapping(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.AfterMapping(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Equals(Gehtsoft.EF.Mapper.Map{`0,`1})" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Equals(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Equals(Gehtsoft.EF.Mapper.IMap)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.GetHashCode" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0,`1,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0,`1)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(`0)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Do(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#For(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Do(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Do(System.Object,System.Object,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.Map`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Mappings" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Mappings" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Source" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Destination" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Pre" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Post" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.MapNullToNull" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Factory" />
        <element api="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Factory" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.AddTarget(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="AddTarget" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.AfterMapping(System.Action`2)">
      <apidata name="AfterMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Assign``1(System.Action`2)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.BeforeMapping(System.Action`2)">
      <apidata name="BeforeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.ContainsRuleFor(System.String)">
      <apidata name="ContainsRuleFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Destination">
      <apidata name="Destination" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Destination" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMap.Destination">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Do(System.Object)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Do(`0)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="source">
          <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Do(`0,`1)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="source">
          <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
        </parameter>
        <parameter name="destination">
          <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Do(`0,`1,System.Boolean)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="source">
          <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
        </parameter>
        <parameter name="destination">
          <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
        </parameter>
        <parameter name="ignoreNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Equals(Gehtsoft.EF.Mapper.IMap)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Equals(Gehtsoft.EF.Mapper.Map{`0,`1})">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
              <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Factory">
      <apidata name="Factory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Factory" />
      <setter name="set_Factory" />
      <returns>
        <type api="T:System.Func`2" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Find``1(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="member">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
                <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Find(System.String)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
                <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.FindTarget(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="FindTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
                <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.For``1(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="member">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.For(System.String)">
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Do(System.Object,System.Object)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object,System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Do(System.Object,System.Object,System.Boolean)">
      <apidata name="Do" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ignoreNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMap.Do(System.Object,System.Object,System.Boolean)">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Factory">
      <apidata name="Factory" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IMap.Factory" />
      <returns>
        <type api="T:System.Func`2" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMap.Factory">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#For(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="source">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMap.For(Gehtsoft.EF.Mapper.IMappingTarget)">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Mappings">
      <apidata name="Mappings" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IMap.Mappings" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMap.Mappings">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Post">
      <apidata name="Post" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IMap.Post" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMap.Post">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Gehtsoft#EF#Mapper#IMap#Pre">
      <apidata name="Pre" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IMap.Pre" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMap.Pre">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.GetTargetByName(System.String)">
      <apidata name="GetTargetByName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.MapNullToNull">
      <apidata name="MapNullToNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MapNullToNull" />
      <setter name="set_MapNullToNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Mappings">
      <apidata name="Mappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mappings" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.Map`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.Map`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.Map`2.Source">
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMap.Source">
          <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.Map`2.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapClassAttribute">
      <apidata name="MapClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.EF.Mapper.MapSpecificationAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MapClassAttribute.#ctor" />
        <element api="M:Gehtsoft.EF.Mapper.MapClassAttribute.#ctor(System.Type)" />
        <element api="P:Gehtsoft.EF.Mapper.MapClassAttribute.OtherType" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapClassAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapClassAttribute.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="otherType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MapClassAttribute.OtherType">
      <apidata name="OtherType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OtherType" />
      <setter name="set_OtherType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapEntityAttribute">
      <apidata name="MapEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.EF.Mapper.MapSpecificationAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MapEntityAttribute.#ctor" />
        <element api="M:Gehtsoft.EF.Mapper.MapEntityAttribute.#ctor(System.Type)" />
        <element api="P:Gehtsoft.EF.Mapper.MapEntityAttribute.EntityType" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapEntityAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapEntityAttribute.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MapEntityAttribute.EntityType">
      <apidata name="EntityType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityType" />
      <setter name="set_EntityType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapExtension">
      <apidata name="MapExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MapExtension.MapPropertiesByName``2(Gehtsoft.EF.Mapper.Map{``0,``1},System.Boolean,System.String[],System.Type[])" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapExtension.MapPropertiesByName``2(Gehtsoft.EF.Mapper.Map{``0,``1},System.Boolean,System.String[],System.Type[])">
      <apidata name="MapPropertiesByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TDestination" />
      </templates>
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Gehtsoft.EF.Mapper.MapExtension.MapPropertiesByName``2(Gehtsoft.EF.Mapper.Map{``0,``1},System.Boolean,System.String[],System.Type[])" />
              <template name="TDestination" index="1" api="M:Gehtsoft.EF.Mapper.MapExtension.MapPropertiesByName``2(Gehtsoft.EF.Mapper.Map{``0,``1},System.Boolean,System.String[],System.Type[])" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyValueTypes">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="propertyIgnoreList">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="typeIgnoreList">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapFactory">
      <apidata name="MapFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.GetMap(System.Type,System.Type,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.GetMap``2(System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.HasMap(System.Type,System.Type)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.HasMap``2" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.CreateMap``2" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.CreateMap(System.Type,System.Type,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0,``1)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.RemoveMap(System.Type,System.Type)" />
        <element api="M:Gehtsoft.EF.Mapper.MapFactory.RemoveMap``2" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.CreateMap``2">
      <apidata name="CreateMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TFrom" />
        <template name="TTo" />
      </templates>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
          <specialization>
            <template name="TFrom" index="0" api="M:Gehtsoft.EF.Mapper.MapFactory.CreateMap``2" />
            <template name="TTo" index="1" api="M:Gehtsoft.EF.Mapper.MapFactory.CreateMap``2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.CreateMap(System.Type,System.Type,System.Boolean)">
      <apidata name="CreateMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="createAlways">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.GetMap``2(System.Boolean)">
      <apidata name="GetMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TFrom" />
        <template name="TTo" />
      </templates>
      <parameters>
        <parameter name="createIfNotExist">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
          <specialization>
            <template name="TFrom" index="0" api="M:Gehtsoft.EF.Mapper.MapFactory.GetMap``2(System.Boolean)" />
            <template name="TTo" index="1" api="M:Gehtsoft.EF.Mapper.MapFactory.GetMap``2(System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.GetMap(System.Type,System.Type,System.Boolean)">
      <apidata name="GetMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="createIfNotExist">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMap" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.HasMap``2">
      <apidata name="HasMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TFrom" />
        <template name="TTo" />
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.HasMap(System.Type,System.Type)">
      <apidata name="HasMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TFrom" />
        <template name="TTo" />
      </templates>
      <parameters>
        <parameter name="source">
          <template name="TFrom" index="0" api="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TTo" index="1" api="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0,``1)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TFrom" />
        <template name="TTo" />
      </templates>
      <parameters>
        <parameter name="source">
          <template name="TFrom" index="0" api="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0,``1)" />
        </parameter>
        <parameter name="destination">
          <template name="TTo" index="1" api="M:Gehtsoft.EF.Mapper.MapFactory.Map``2(``0,``1)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.RemoveMap``2">
      <apidata name="RemoveMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TFrom" />
        <template name="TTo" />
      </templates>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapFactory.RemoveMap(System.Type,System.Type)">
      <apidata name="RemoveMap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapFlag">
      <apidata name="MapFlag" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.EF.Mapper.MapFlag.None" />
        <element api="F:Gehtsoft.EF.Mapper.MapFlag.TrimStrings" />
        <element api="F:Gehtsoft.EF.Mapper.MapFlag.TrimToSeconds" />
        <element api="F:Gehtsoft.EF.Mapper.MapFlag.TrimToDate" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Gehtsoft.EF.Mapper.MapFlag.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.EF.Mapper.MapFlag.TrimStrings">
      <apidata name="TrimStrings" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.EF.Mapper.MapFlag.TrimToDate">
      <apidata name="TrimToDate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.EF.Mapper.MapFlag.TrimToSeconds">
      <apidata name="TrimToSeconds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MappingAction`2">
      <apidata name="MappingAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSource" />
        <template name="TTarget" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.#ctor(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.#ctor(System.Action`2,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.Perform(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.When(System.Func`3)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.Unless(System.Func`3)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.WhenNull" />
        <element api="M:Gehtsoft.EF.Mapper.MappingAction`2.WhenNotNull" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.#ctor(System.Action`2)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.#ctor(System.Action`2,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.Perform(System.Object,System.Object)">
      <apidata name="Perform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingAction.Perform(System.Object,System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.Unless(System.Func`3)">
      <apidata name="Unless" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`3" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
            <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.When(System.Func`3)">
      <apidata name="When" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`3" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
            <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.WhenNotNull">
      <apidata name="WhenNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
            <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingAction`2.WhenNull">
      <apidata name="WhenNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
            <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingAction`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MappingActionCollection`2">
      <apidata name="MappingActionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSource" />
        <template name="TTarget" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
                <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.Add(Gehtsoft.EF.Mapper.MappingAction{`0,`1})" />
        <element api="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.Gehtsoft#EF#Mapper#IMappingActionCollection#Add(Gehtsoft.EF.Mapper.IMappingAction)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.#ctor" />
        <element api="P:Gehtsoft.EF.Mapper.MappingActionCollection`2.Count" />
        <element api="P:Gehtsoft.EF.Mapper.MappingActionCollection`2.Item(System.Int32)" />
        <element api="P:Gehtsoft.EF.Mapper.MappingActionCollection`2.Gehtsoft#EF#Mapper#IMappingActionCollection#Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.Add(Gehtsoft.EF.Mapper.MappingAction{`0,`1})">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
              <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MappingActionCollection`2.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingActionCollection.Count">
          <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.Gehtsoft#EF#Mapper#IMappingActionCollection#Add(Gehtsoft.EF.Mapper.IMappingAction)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="action">
          <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingActionCollection.Add(Gehtsoft.EF.Mapper.IMappingAction)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MappingActionCollection`2.Gehtsoft#EF#Mapper#IMappingActionCollection#Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IMappingActionCollection.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingActionCollection.Item(System.Int32)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingActionCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
                <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
                  <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MappingActionCollection`2.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MappingAction`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
            <template name="TTarget" index="1" api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IMappingAction" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingActionCollection`2.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingActionCollection`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MappingPredicate`1">
      <apidata name="MappingPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MappingPredicate`1.#ctor(System.Func`2)" />
        <element api="M:Gehtsoft.EF.Mapper.MappingPredicate`1.Evaluate(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.MappingPredicate`1.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingPredicate`1.#ctor(System.Func`2)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MappingPredicate`1.Evaluate(System.Object)">
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingPredicate.Evaluate(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MappingPredicate`1.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingPredicate.ParameterType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MappingPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapPropertyAttribute">
      <apidata name="MapPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor" />
        <element api="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor(System.String,Gehtsoft.EF.Mapper.MapFlag)" />
        <element api="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor(Gehtsoft.EF.Mapper.MapFlag)" />
        <element api="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.Name" />
        <element api="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.MapFlags" />
        <element api="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.IgnoreToModel" />
        <element api="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.IgnoreFromModel" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor(Gehtsoft.EF.Mapper.MapFlag)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mapFlags">
          <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapPropertyAttribute.#ctor(System.String,Gehtsoft.EF.Mapper.MapFlag)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mapFlags">
          <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.IgnoreFromModel">
      <apidata name="IgnoreFromModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreFromModel" />
      <setter name="set_IgnoreFromModel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.IgnoreToModel">
      <apidata name="IgnoreToModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreToModel" />
      <setter name="set_IgnoreToModel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.MapFlags">
      <apidata name="MapFlags" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MapFlags" />
      <setter name="set_MapFlags" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.MapPropertyAttribute.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.MapSpecificationAttribute">
      <apidata name="MapSpecificationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.EF.Mapper.MapClassAttribute" ref="true" />
          <type api="T:Gehtsoft.EF.Mapper.MapEntityAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.MapSpecificationAttribute.#ctor(System.Type)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.MapSpecificationAttribute.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="initializerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.MapSpecificationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource">
      <apidata name="ModelPrimaryKeySource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.#ctor(Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo,System.Reflection.PropertyInfo)" />
        <element api="M:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.Get(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.ValueType" />
        <element api="P:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.#ctor(Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo,System.Reflection.PropertyInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="foreignKeyAccessor">
          <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor.ColumnInfo" ref="true">
            <type api="T:Gehtsoft.EF.Db.SqlDb.QueryBuilder.TableDescriptor" ref="true" />
          </type>
        </parameter>
        <parameter name="primaryKeySource">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.Get(System.Object)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingSource.Get(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.Name">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.ModelPrimaryKeySource.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingSource.ValueType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.EF.Mapper" module="Gehtsoft.EF.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ModelPrimaryKeySource" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.NeverMappingPredicate">
      <apidata name="NeverMappingPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.NeverMappingPredicate.Evaluate(System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.NeverMappingPredicate.#ctor" />
        <element api="P:Gehtsoft.EF.Mapper.NeverMappingPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.NeverMappingPredicate.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.NeverMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.NeverMappingPredicate.Evaluate(System.Object)">
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingPredicate.Evaluate(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.NeverMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.NeverMappingPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingPredicate.ParameterType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.NeverMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.NotMappingPredicate">
      <apidata name="NotMappingPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.NotMappingPredicate.#ctor(Gehtsoft.EF.Mapper.IMappingPredicate)" />
        <element api="M:Gehtsoft.EF.Mapper.NotMappingPredicate.Evaluate(System.Object)" />
        <element api="P:Gehtsoft.EF.Mapper.NotMappingPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.NotMappingPredicate.#ctor(Gehtsoft.EF.Mapper.IMappingPredicate)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.NotMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.NotMappingPredicate.Evaluate(System.Object)">
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IMappingPredicate.Evaluate(System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.NotMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.NotMappingPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IMappingPredicate.ParameterType">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.NotMappingPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.PropertyMapping`2">
      <apidata name="PropertyMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSource" />
        <template name="TDestination" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.#ctor(Gehtsoft.EF.Mapper.Map{`0,`1})" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.From(Gehtsoft.EF.Mapper.IMappingSource)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.From``1(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.From(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To(System.String)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To``1(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To``1(System.Action`2)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Assign``1(``0)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Assign``1(System.Func`2)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.When(Gehtsoft.EF.Mapper.IMappingPredicate)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.When(System.Func`2)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.WhenDestination(System.Func`2)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Ignore" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.ReplaceWith" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Always" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.WithFlags(Gehtsoft.EF.Mapper.MapFlag)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Otherwise" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(`0,`1)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(`0,`1,System.Boolean)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(System.Object,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(System.Object,System.Object,System.Boolean)" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMapping`2.Target" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMapping`2.Source" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMapping`2.WhenPredicate" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMapping`2.MapFlag" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.#ctor(Gehtsoft.EF.Mapper.Map{`0,`1})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="map">
          <type api="T:Gehtsoft.EF.Mapper.Map`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
              <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Always">
      <apidata name="Always" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Assign``1(System.Func`2)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Assign``1(``0)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="constant">
          <template name="TValue" index="0" api="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Assign``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.From(Gehtsoft.EF.Mapper.IMappingSource)">
      <apidata name="From" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.From``1(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="From" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="from">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.From(System.String)">
      <apidata name="From" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Ignore">
      <apidata name="Ignore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(System.Object,System.Object)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IPropertyMapping.Map(System.Object,System.Object)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(System.Object,System.Object,System.Boolean)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ignoreNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IPropertyMapping.Map(System.Object,System.Object,System.Boolean)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(`0,`1)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
        </parameter>
        <parameter name="destination">
          <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Map(`0,`1,System.Boolean)">
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
        </parameter>
        <parameter name="destination">
          <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
        </parameter>
        <parameter name="ignoreNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMapping`2.MapFlag">
      <apidata name="MapFlag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MapFlag" />
      <setter name="set_MapFlag" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMapping.MapFlag">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.Otherwise">
      <apidata name="Otherwise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.ReplaceWith">
      <apidata name="ReplaceWith" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMapping`2.Source">
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingSource" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMapping.Source">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMapping`2.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMapping.Target">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="To" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To``1(System.Action`2)">
      <apidata name="To" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To``1(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="To" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="to">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.To(System.String)">
      <apidata name="To" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.When(Gehtsoft.EF.Mapper.IMappingPredicate)">
      <apidata name="When" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.When(System.Func`2)">
      <apidata name="When" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.WhenDestination(System.Func`2)">
      <apidata name="WhenDestination" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMapping`2.WhenPredicate">
      <apidata name="WhenPredicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WhenPredicate" />
      <setter name="set_WhenPredicate" />
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IMappingPredicate" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMapping.WhenPredicate">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMapping`2.WithFlags(Gehtsoft.EF.Mapper.MapFlag)">
      <apidata name="WithFlags" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.PropertyMappingCollection">
      <apidata name="PropertyMappingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.Add(Gehtsoft.EF.Mapper.IPropertyMapping)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.Find(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.#ctor" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMappingCollection.Count" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMappingCollection.Item(System.Int32)" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMappingCollection.Gehtsoft#EF#Mapper#IPropertyMappingCollection#Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.Add(Gehtsoft.EF.Mapper.IPropertyMapping)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Add(Gehtsoft.EF.Mapper.IPropertyMapping)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMappingCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Count">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.Find(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Find(Gehtsoft.EF.Mapper.IMappingTarget)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMappingCollection.Gehtsoft#EF#Mapper#IPropertyMappingCollection#Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IPropertyMappingCollection.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Item(System.Int32)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMappingCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2">
      <apidata name="PropertyMappingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSource" />
        <template name="TDestination" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
                <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Add(Gehtsoft.EF.Mapper.PropertyMapping{`0,`1})" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Gehtsoft#EF#Mapper#IPropertyMappingCollection#Add(Gehtsoft.EF.Mapper.IPropertyMapping)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Find(Gehtsoft.EF.Mapper.IMappingTarget)" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.#ctor" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Count" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Item(System.Int32)" />
        <element api="P:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Gehtsoft#EF#Mapper#IPropertyMappingCollection#Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Add(Gehtsoft.EF.Mapper.PropertyMapping{`0,`1})">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
              <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Count">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Find(Gehtsoft.EF.Mapper.IMappingTarget)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.EF.Mapper.IMappingTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Find(Gehtsoft.EF.Mapper.IMappingTarget)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Gehtsoft#EF#Mapper#IPropertyMappingCollection#Add(Gehtsoft.EF.Mapper.IPropertyMapping)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Add(Gehtsoft.EF.Mapper.IPropertyMapping)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Gehtsoft#EF#Mapper#IPropertyMappingCollection#Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.EF.Mapper.IPropertyMappingCollection.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.EF.Mapper.IPropertyMappingCollection.Item(System.Int32)">
          <type api="T:Gehtsoft.EF.Mapper.IPropertyMappingCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
                <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
                  <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.EF.Mapper.PropertyMapping`2" ref="true">
          <specialization>
            <template name="TSource" index="0" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
            <template name="TDestination" index="1" api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.EF.Mapper.IPropertyMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.PropertyMappingCollection`2.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.PropertyMappingCollection`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.EF.Mapper.ValueMapper">
      <apidata name="ValueMapper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.EF.Mapper.ValueMapper.MapValue(System.Object,System.Type,Gehtsoft.EF.Mapper.MapFlag,System.Object)" />
        <element api="M:Gehtsoft.EF.Mapper.ValueMapper.GetElementType(System.Type)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ValueMapper.GetElementType(System.Type)">
      <apidata name="GetElementType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ValueMapper" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.EF.Mapper.ValueMapper.MapValue(System.Object,System.Type,Gehtsoft.EF.Mapper.MapFlag,System.Object)">
      <apidata name="MapValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="flags">
          <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
          <argument>
            <type api="T:Gehtsoft.EF.Mapper.MapFlag" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="destinationValue">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Mapper" module="Gehtsoft.Mapper" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.EF.Mapper" />
        <type api="T:Gehtsoft.EF.Mapper.ValueMapper" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Validator">
      <apidata name="Gehtsoft.Validator" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Validator.MustBeNotEmptyAttribute" />
        <element api="T:Gehtsoft.Validator.MustBeInRangeAttribute" />
        <element api="T:Gehtsoft.Validator.MustBeNotNullAttribute" />
        <element api="T:Gehtsoft.Validator.MustBeNotNullOrWhitespaceAttribute" />
        <element api="T:Gehtsoft.Validator.MustBeShorterThanAttribute" />
        <element api="T:Gehtsoft.Validator.MustMatchAttribute" />
        <element api="T:Gehtsoft.Validator.ValidatorAttributeBase" />
        <element api="T:Gehtsoft.Validator.AlwaysPredicate" />
        <element api="T:Gehtsoft.Validator.CreditCardNumberPredicate" />
        <element api="T:Gehtsoft.Validator.DoesMatchPredicate" />
        <element api="T:Gehtsoft.Validator.DoesNotMatchPredicate" />
        <element api="T:Gehtsoft.Validator.EmailAddressPredicate" />
        <element api="T:Gehtsoft.Validator.ExpressionPredicate`1" />
        <element api="T:Gehtsoft.Validator.FunctionPredicate`1" />
        <element api="T:Gehtsoft.Validator.HTMLInjectionPredicate" />
        <element api="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate" />
        <element api="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate" />
        <element api="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate" />
        <element api="T:Gehtsoft.Validator.IsNotNullPredicate" />
        <element api="T:Gehtsoft.Validator.IsNullPredicate" />
        <element api="T:Gehtsoft.Validator.IsShorterThanPredicate" />
        <element api="T:Gehtsoft.Validator.IValidationPredicate" />
        <element api="T:Gehtsoft.Validator.IValidationPredicateAsync" />
        <element api="T:Gehtsoft.Validator.ValidationPredicateCollection" />
        <element api="T:Gehtsoft.Validator.NeverPredicate" />
        <element api="T:Gehtsoft.Validator.PhoneNumberPredicate" />
        <element api="T:Gehtsoft.Validator.SQLInjectionPredicate" />
        <element api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" />
        <element api="T:Gehtsoft.Validator.IValidationMessageResolver" />
        <element api="T:Gehtsoft.Validator.ValidationMessageNullResolver" />
        <element api="T:Gehtsoft.Validator.ValidationMessageResolverFactory" />
        <element api="T:Gehtsoft.Validator.GenericValidationRule`2" />
        <element api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
        <element api="T:Gehtsoft.Validator.IValidationRule" />
        <element api="T:Gehtsoft.Validator.ValidationRule" />
        <element api="T:Gehtsoft.Validator.ValidationRuleBuilder" />
        <element api="T:Gehtsoft.Validator.ValidationRuleCollection" />
        <element api="T:Gehtsoft.Validator.EntityValidationTarget" />
        <element api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" />
        <element api="T:Gehtsoft.Validator.FunctionValidationTarget`2" />
        <element api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" />
        <element api="T:Gehtsoft.Validator.PropertyValidationTarget" />
        <element api="T:Gehtsoft.Validator.IValidationTarget" />
        <element api="T:Gehtsoft.Validator.ValidationTarget" />
        <element api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" />
        <element api="T:Gehtsoft.Validator.AbstractValidator`1" />
        <element api="T:Gehtsoft.Validator.BaseValidator" />
        <element api="T:Gehtsoft.Validator.IBaseValidator" />
        <element api="T:Gehtsoft.Validator.IValidator`1" />
        <element api="T:Gehtsoft.Validator.IAsyncBaseValidator" />
        <element api="T:Gehtsoft.Validator.IAsyncValidator`1" />
        <element api="T:Gehtsoft.Validator.ValidationFailure" />
        <element api="T:Gehtsoft.Validator.ValidationFailureCollection" />
        <element api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" />
        <element api="T:Gehtsoft.Validator.ValidationResult" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Validator.AbstractValidator`1">
      <apidata name="AbstractValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
          </specialization>
        </type>
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.#ctor" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.When(System.Func`2)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.When(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.Unless(System.Func`2)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.Unless(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.RuleForEntity(System.String)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.RuleFor``1(System.String)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.RuleForAll``1(System.String)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.RuleForAll``1(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
        <element api="M:Gehtsoft.Validator.AbstractValidator`1.Validate(`0)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.Validate(System.Object)" />
        <element api="F:Gehtsoft.Validator.BaseValidator.mRules" />
        <element api="F:Gehtsoft.Validator.BaseValidator.mWhen" />
        <element api="F:Gehtsoft.Validator.BaseValidator.mUnless" />
        <element api="M:Gehtsoft.Validator.BaseValidator.AddRule(System.String,System.Type,System.Boolean,Gehtsoft.Validator.IValidationPredicate,System.Nullable{System.Int32},System.String)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.Rule(Gehtsoft.Validator.ValidationTarget)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.CalculatePredicateAsync(System.Void,System.Boolean,Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.ValidateCore(System.Void,Gehtsoft.Validator.ValidationResult,System.Boolean)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.ValidateOneValue(System.Boolean,Gehtsoft.Validator.ValidationResult,Gehtsoft.Validator.ValidationRule,System.Object,Gehtsoft.Validator.ValidationTarget.ValidationValue,System.Type,System.Nullable{System.Threading.CancellationToken})" />
        <element api="M:Gehtsoft.Validator.BaseValidator.GetRule(System.Int32)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.GetEnumerator" />
        <element api="M:Gehtsoft.Validator.BaseValidator.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.Validator.BaseValidator.ValidateType" />
        <element api="P:Gehtsoft.Validator.BaseValidator.Count" />
        <element api="P:Gehtsoft.Validator.BaseValidator.Item(System.Int32)" />
        <element api="P:Gehtsoft.Validator.BaseValidator.SkipIfNull" />
        <element api="P:Gehtsoft.Validator.BaseValidator.RulesCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension.GetJsRules(Gehtsoft.Validator.IBaseValidator,System.Type)" source="extension">
          <apidata name="GetJsRules" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="compilerType">
              <type api="T:System.Type" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator.JSConvertor" />
            <type api="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <apidata name="RuleFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TV" />
      </templates>
      <parameters>
        <parameter name="accessor">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
            <template name="TV" index="0" api="M:Gehtsoft.Validator.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.RuleFor``1(System.String)">
      <apidata name="RuleFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TV" />
      </templates>
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
            <template name="TV" index="0" api="M:Gehtsoft.Validator.AbstractValidator`1.RuleFor``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.RuleForAll``1(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <apidata name="RuleForAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TV" />
      </templates>
      <parameters>
        <parameter name="accessor">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
            <template name="TV" index="0" api="M:Gehtsoft.Validator.AbstractValidator`1.RuleForAll``1(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.RuleForAll``1(System.String)">
      <apidata name="RuleForAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TV" />
      </templates>
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
            <template name="TV" index="0" api="M:Gehtsoft.Validator.AbstractValidator`1.RuleForAll``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.RuleForEntity(System.String)">
      <apidata name="RuleForEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
            <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.Unless(System.Func`2)">
      <apidata name="Unless" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.Validate(`0)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="entity">
          <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidator`1.Validate(`0)">
          <type api="T:Gehtsoft.Validator.IValidator`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Validator.AbstractValidator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AbstractValidator`1.When(System.Func`2)">
      <apidata name="When" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.AlwaysPredicate">
      <apidata name="AlwaysPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.AlwaysPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.AlwaysPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.AlwaysPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.AlwaysPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AlwaysPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AlwaysPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.AlwaysPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AlwaysPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AlwaysPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AlwaysPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.AlwaysPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.AlwaysPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.BaseValidator">
      <apidata name="BaseValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:Gehtsoft.Validator.IAsyncBaseValidator" ref="true" />
      </implements>
      <elements>
        <element api="F:Gehtsoft.Validator.BaseValidator.mRules" />
        <element api="F:Gehtsoft.Validator.BaseValidator.mWhen" />
        <element api="F:Gehtsoft.Validator.BaseValidator.mUnless" />
        <element api="M:Gehtsoft.Validator.BaseValidator.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.AddRule(System.String,System.Type,System.Boolean,Gehtsoft.Validator.IValidationPredicate,System.Nullable{System.Int32},System.String)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.When(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.Unless(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.RuleForEntity(System.String)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.RuleFor(System.String)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.RuleForAll(System.String)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.Rule(Gehtsoft.Validator.ValidationTarget)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.CalculatePredicateAsync(System.Void,System.Boolean,Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.ValidateCore(System.Void,Gehtsoft.Validator.ValidationResult,System.Boolean)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.ValidateOneValue(System.Boolean,Gehtsoft.Validator.ValidationResult,Gehtsoft.Validator.ValidationRule,System.Object,Gehtsoft.Validator.ValidationTarget.ValidationValue,System.Type,System.Nullable{System.Threading.CancellationToken})" />
        <element api="M:Gehtsoft.Validator.BaseValidator.GetRule(System.Int32)" />
        <element api="M:Gehtsoft.Validator.BaseValidator.GetEnumerator" />
        <element api="M:Gehtsoft.Validator.BaseValidator.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.Validator.BaseValidator.ValidateType" />
        <element api="P:Gehtsoft.Validator.BaseValidator.Count" />
        <element api="P:Gehtsoft.Validator.BaseValidator.Item(System.Int32)" />
        <element api="P:Gehtsoft.Validator.BaseValidator.SkipIfNull" />
        <element api="P:Gehtsoft.Validator.BaseValidator.RulesCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension.GetJsRules(Gehtsoft.Validator.IBaseValidator,System.Type)" source="extension">
          <apidata name="GetJsRules" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="compilerType">
              <type api="T:System.Type" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator.JSConvertor" />
            <type api="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="validateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.AddRule(System.String,System.Type,System.Boolean,Gehtsoft.Validator.IValidationPredicate,System.Nullable{System.Int32},System.String)">
      <apidata name="AddRule" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="forElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.CalculatePredicateAsync(System.Void,System.Boolean,Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="CalculatePredicateAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Void" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="token">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.BaseValidator.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.GetRule(System.Int32)">
      <apidata name="GetRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.BaseValidator.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Validator.BaseValidator.mRules">
      <apidata name="mRules" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Validator.BaseValidator.mUnless">
      <apidata name="mUnless" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Validator.BaseValidator.mWhen">
      <apidata name="mWhen" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.Rule(Gehtsoft.Validator.ValidationTarget)">
      <apidata name="Rule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.RuleFor(System.String)">
      <apidata name="RuleFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.RuleForAll(System.String)">
      <apidata name="RuleForAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.RuleForEntity(System.String)">
      <apidata name="RuleForEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.BaseValidator.RulesCount">
      <apidata name="RulesCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RulesCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.BaseValidator.SkipIfNull">
      <apidata name="SkipIfNull" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SkipIfNull" />
      <setter name="set_SkipIfNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.Unless(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="Unless" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IBaseValidator.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)">
      <apidata name="ValidateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Void" ref="false" />
        </parameter>
        <parameter name="token">
          <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IAsyncBaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)">
          <type api="T:Gehtsoft.Validator.IAsyncBaseValidator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.ValidateCore(System.Void,Gehtsoft.Validator.ValidationResult,System.Boolean)">
      <apidata name="ValidateCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sync">
          <type api="T:System.Void" ref="false" />
        </parameter>
        <parameter name="entity">
          <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.ValidateOneValue(System.Boolean,Gehtsoft.Validator.ValidationResult,Gehtsoft.Validator.ValidationRule,System.Object,Gehtsoft.Validator.ValidationTarget.ValidationValue,System.Type,System.Nullable{System.Threading.CancellationToken})">
      <apidata name="ValidateOneValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="result">
          <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
        </parameter>
        <parameter name="rule">
          <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
        </parameter>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </parameter>
        <parameter name="valueType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.BaseValidator.ValidateType">
      <apidata name="ValidateType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ValidateType" />
      <setter name="set_ValidateType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IBaseValidator.ValidateType">
          <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.BaseValidator.When(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="When" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.CreditCardNumberPredicate">
      <apidata name="CreditCardNumberPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.CreditCardNumberPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.CreditCardNumberPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.CreditCardNumberPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.CreditCardNumberPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.CreditCardNumberPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.CreditCardNumberPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.CreditCardNumberPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.CreditCardNumberPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.CreditCardNumberPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.CreditCardNumberPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.CreditCardNumberPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="_value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.CreditCardNumberPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.DoesMatchPredicate">
      <apidata name="DoesMatchPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.EmailAddressPredicate" ref="true" />
          <type api="T:Gehtsoft.Validator.PhoneNumberPredicate" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.#ctor(System.Type,System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)" />
        <element api="P:Gehtsoft.Validator.DoesMatchPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesMatchPredicate.#ctor(System.Type,System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.DoesMatchPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesMatchPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)">
      <apidata name="Suffix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="options">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesMatchPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.DoesNotMatchPredicate">
      <apidata name="DoesNotMatchPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.HTMLInjectionPredicate" ref="true" />
          <type api="T:Gehtsoft.Validator.SQLInjectionPredicate" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.#ctor(System.Type,System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)" />
        <element api="P:Gehtsoft.Validator.DoesNotMatchPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesNotMatchPredicate.#ctor(System.Type,System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.DoesNotMatchPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesNotMatchPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesNotMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)">
      <apidata name="Suffix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="options">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.DoesNotMatchPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.EmailAddressPredicate">
      <apidata name="EmailAddressPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.EmailAddressPredicate.#ctor" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)" />
        <element api="P:Gehtsoft.Validator.DoesMatchPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.EmailAddressPredicate.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EmailAddressPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.EntityValidationTarget">
      <apidata name="EntityValidationTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.EntityValidationTarget.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Validator.EntityValidationTarget.#ctor(System.Type,System.String)" />
        <element api="M:Gehtsoft.Validator.EntityValidationTarget.First(System.Object)" />
        <element api="M:Gehtsoft.Validator.EntityValidationTarget.All(System.Object)" />
        <element api="P:Gehtsoft.Validator.EntityValidationTarget.ValueType" />
        <element api="P:Gehtsoft.Validator.EntityValidationTarget.TargetName" />
        <element api="P:Gehtsoft.Validator.EntityValidationTarget.IsSingleValue" />
        <element api="P:Gehtsoft.Validator.EntityValidationTarget.IsProperty" />
        <element api="P:Gehtsoft.Validator.EntityValidationTarget.PropertyName" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.EntityValidationTarget.#ctor(System.Type,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.EntityValidationTarget.All(System.Object)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.EntityValidationTarget.First(System.Object)">
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.EntityValidationTarget.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Validator.EntityValidationTarget.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.EntityValidationTarget.IsProperty">
      <apidata name="IsProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsProperty">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.EntityValidationTarget.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.EntityValidationTarget.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.PropertyName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.EntityValidationTarget.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.EntityValidationTarget.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ExpressionPredicate`1">
      <apidata name="ExpressionPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Validator.ExpressionPredicate`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Validator.ExpressionPredicate`1.#ctor(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
        <element api="M:Gehtsoft.Validator.ExpressionPredicate`1.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.FunctionPredicate`1.Validate(System.Object)" />
        <element api="P:Gehtsoft.Validator.FunctionPredicate`1.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ExpressionPredicate`1.#ctor(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="predicateSource">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parameterIsEntity">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ExpressionPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ExpressionPredicate`1.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.FunctionPredicate`1.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Validator.ExpressionPredicate`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="expressionCompilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ExpressionPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.FunctionPredicate`1">
      <apidata name="FunctionPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.ExpressionPredicate`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.FunctionPredicate`1.#ctor(System.Func`2)" />
        <element api="M:Gehtsoft.Validator.FunctionPredicate`1.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.FunctionPredicate`1.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.FunctionPredicate`1.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionPredicate`1.#ctor(System.Func`2)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionPredicate`1.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionPredicate`1.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionPredicate`1.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2">
      <apidata name="FunctionValidationArrayTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TE" />
        <template name="TV">
          <constrained>
            <implements>
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.#ctor(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
        <element api="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.First(System.Object)" />
        <element api="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.All(System.Object)" />
        <element api="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.TargetName" />
        <element api="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.IsProperty" />
        <element api="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.PropertyName" />
        <element api="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.ValueType" />
        <element api="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.IsSingleValue" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.#ctor(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.All(System.Object)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.First(System.Object)">
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Validator.FunctionValidationArrayTarget`2.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.IsProperty">
      <apidata name="IsProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsProperty">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.PropertyName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationArrayTarget`2.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.FunctionValidationTarget`2">
      <apidata name="FunctionValidationTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TE" />
        <template name="TV" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Validator.FunctionValidationTarget`2.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Validator.FunctionValidationTarget`2.#ctor(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)" />
        <element api="M:Gehtsoft.Validator.FunctionValidationTarget`2.First(System.Object)" />
        <element api="M:Gehtsoft.Validator.FunctionValidationTarget`2.All(System.Object)" />
        <element api="P:Gehtsoft.Validator.FunctionValidationTarget`2.TargetName" />
        <element api="P:Gehtsoft.Validator.FunctionValidationTarget`2.IsProperty" />
        <element api="P:Gehtsoft.Validator.FunctionValidationTarget`2.PropertyName" />
        <element api="P:Gehtsoft.Validator.FunctionValidationTarget`2.ValueType" />
        <element api="P:Gehtsoft.Validator.FunctionValidationTarget`2.IsSingleValue" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationTarget`2.#ctor(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationTarget`2.All(System.Object)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationTarget`2.First(System.Object)">
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.FunctionValidationTarget`2.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Validator.FunctionValidationTarget`2.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationTarget`2.IsProperty">
      <apidata name="IsProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsProperty">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationTarget`2.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationTarget`2.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.PropertyName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationTarget`2.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.FunctionValidationTarget`2.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.GenericValidationRule`2">
      <apidata name="GenericValidationRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TE" />
        <template name="TV" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Validator.GenericValidationRule`2.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidationRule.EntityType" />
        <element api="P:Gehtsoft.Validator.ValidationRule.RuleValueType" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Target" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Gehtsoft#Validator#IValidationRule#Target" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Validator" />
        <element api="P:Gehtsoft.Validator.ValidationRule.WhenValue" />
        <element api="P:Gehtsoft.Validator.ValidationRule.WhenEntity" />
        <element api="P:Gehtsoft.Validator.ValidationRule.UnlessValue" />
        <element api="P:Gehtsoft.Validator.ValidationRule.UnlessEntity" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Code" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Message" />
        <element api="P:Gehtsoft.Validator.ValidationRule.HasAnotherValidator" />
        <element api="P:Gehtsoft.Validator.ValidationRule.AnotherValidatorType" />
        <element api="P:Gehtsoft.Validator.ValidationRule.IgnoreOnClient" />
        <element api="P:Gehtsoft.Validator.ValidationRule.AnotherValidatorInstance" />
        <element api="P:Gehtsoft.Validator.ValidationRule.AnotherValidator" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRule`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRule`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2">
      <apidata name="GenericValidationRuleBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TE" />
        <template name="TV" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.#ctor(Gehtsoft.Validator.BaseValidator,Gehtsoft.Validator.ValidationRule)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Must(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.Must(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EntityMust(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WhenValue(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenValue(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WhenEntity(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenEntity(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.UnlessValue(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.UnlessValue(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.UnlessEntity(System.Linq.Expressions.Expression{System.Func`2})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.UnlessEntity(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Null" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotNull" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotNullOrEmpty" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotNullOrWhitespace" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ShorterThan(System.Int32)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.DoesMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.DoesNotMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EnumIsCorrect" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EnumIsCorrect(System.Type)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EnumIsCorrect``1" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Between(`1,`1)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Between(`1,System.Boolean,`1,System.Boolean)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WithCode(System.Int32)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WithMessage(System.String)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WhenNotNull" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing(System.Type)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing(System.Type,System.Object[])" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing(Gehtsoft.Validator.IBaseValidator)" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing``1" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing``1(System.Object[])" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EmailAddress" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotHTML" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotSQLInjection" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.PhoneNumber" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.CreditCardNumber" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ServerOnly" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Otherwise" />
        <element api="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Also" />
        <element api="P:Gehtsoft.Validator.ValidationRuleBuilder.Rule" />
        <element api="P:Gehtsoft.Validator.ValidationRuleBuilder.Validator" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.#ctor(Gehtsoft.Validator.BaseValidator,Gehtsoft.Validator.ValidationRule)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="validator">
          <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
        </parameter>
        <parameter name="validationRule">
          <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Also">
      <apidata name="Also" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Between(`1,System.Boolean,`1,System.Boolean)">
      <apidata name="Between" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minValue">
          <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
        </parameter>
        <parameter name="minInclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
        </parameter>
        <parameter name="maxInclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Between(`1,`1)">
      <apidata name="Between" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minValue">
          <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
        </parameter>
        <parameter name="maxValue">
          <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.CreditCardNumber">
      <apidata name="CreditCardNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.DoesMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})">
      <apidata name="DoesMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.DoesNotMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})">
      <apidata name="DoesNotMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EmailAddress">
      <apidata name="EmailAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EntityMust(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="EntityMust" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EnumIsCorrect">
      <apidata name="EnumIsCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EnumIsCorrect``1">
      <apidata name="EnumIsCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.EnumIsCorrect(System.Type)">
      <apidata name="EnumIsCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Must(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="Must" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotHTML">
      <apidata name="NotHTML" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotNull">
      <apidata name="NotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotNullOrEmpty">
      <apidata name="NotNullOrEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotNullOrWhitespace">
      <apidata name="NotNullOrWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.NotSQLInjection">
      <apidata name="NotSQLInjection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Null">
      <apidata name="Null" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.Otherwise">
      <apidata name="Otherwise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.PhoneNumber">
      <apidata name="PhoneNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ServerOnly">
      <apidata name="ServerOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ShorterThan(System.Int32)">
      <apidata name="ShorterThan" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.UnlessEntity(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="UnlessEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.UnlessValue(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="UnlessValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing``1">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TX">
          <constrained ctor="true">
            <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing(Gehtsoft.Validator.IBaseValidator)">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validator">
          <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing``1(System.Object[])">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TX">
          <constrained>
            <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing(System.Type)">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validatorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.ValidateUsing(System.Type,System.Object[])">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validatorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WhenEntity(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="WhenEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WhenNotNull">
      <apidata name="WhenNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WhenValue(System.Linq.Expressions.Expression{System.Func`2})">
      <apidata name="WhenValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WithCode(System.Int32)">
      <apidata name="WithCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.GenericValidationRuleBuilder`2.WithMessage(System.String)">
      <apidata name="WithMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true">
          <specialization>
            <template name="TE" index="0" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
            <template name="TV" index="1" api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.HTMLInjectionPredicate">
      <apidata name="HTMLInjectionPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.HTMLInjectionPredicate.#ctor" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)" />
        <element api="P:Gehtsoft.Validator.DoesNotMatchPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.HTMLInjectionPredicate.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.HTMLInjectionPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IAsyncBaseValidator">
      <apidata name="IAsyncBaseValidator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
        <type api="T:Gehtsoft.Validator.IAsyncValidator`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Validator.IAsyncBaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IAsyncBaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)">
      <apidata name="ValidateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Void" ref="false" />
        </parameter>
        <parameter name="token">
          <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IAsyncBaseValidator" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IAsyncValidator`1">
      <apidata name="IAsyncValidator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.Validator.IAsyncBaseValidator" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IAsyncValidator`1.ValidateAsync(System.Void)" />
        <element api="M:Gehtsoft.Validator.IAsyncBaseValidator.ValidateAsync(System.Void,Gehtsoft.Validator.ValidationResult)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IAsyncValidator`1.ValidateAsync(System.Void)">
      <apidata name="ValidateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Void" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IAsyncValidator`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IBaseValidator">
      <apidata name="IBaseValidator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
        <type api="T:Gehtsoft.Validator.IValidator`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Validator.IBaseValidator.Validate(System.Object)" />
        <element api="P:Gehtsoft.Validator.IBaseValidator.ValidateType" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension.GetJsRules(Gehtsoft.Validator.IBaseValidator,System.Type)" source="extension">
          <apidata name="GetJsRules" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="compilerType">
              <type api="T:System.Type" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator.JSConvertor" />
            <type api="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IBaseValidator.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IBaseValidator.ValidateType">
      <apidata name="ValidateType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidateType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate">
      <apidata name="IsEnumValueCorrectPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IsEnumValueCorrectPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.IsEnumValueCorrectPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IsEnumValueCorrectPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IsEnumValueCorrectPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsEnumValueCorrectPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IsEnumValueCorrectPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsEnumValueCorrectPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsEnumValueCorrectPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate">
      <apidata name="IsNotNullOrEmptyPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullOrEmptyPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate">
      <apidata name="IsNotNullOrWhitespacePredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IsNotNullPredicate">
      <apidata name="IsNotNullPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IsNotNullPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.IsNotNullPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IsNotNullPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IsNotNullPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IsNotNullPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNotNullPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNotNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IsNullPredicate">
      <apidata name="IsNullPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IsNullPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.IsNullPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IsNullPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IsNullPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNullPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IsNullPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNullPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsNullPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsNullPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IsShorterThanPredicate">
      <apidata name="IsShorterThanPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.IsShorterThanPredicate.#ctor(System.Type,System.Int32)" />
        <element api="M:Gehtsoft.Validator.IsShorterThanPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IsShorterThanPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IsShorterThanPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsShorterThanPredicate.#ctor(System.Type,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsShorterThanPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IsShorterThanPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsShorterThanPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsShorterThanPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsShorterThanPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IsShorterThanPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IsShorterThanPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IValidationMessageResolver">
      <apidata name="IValidationMessageResolver" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Validator.ValidationMessageNullResolver" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Validator.IValidationMessageResolver.Resolve(System.Type,Gehtsoft.Validator.ValidationTarget,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IValidationMessageResolver.Resolve(System.Type,Gehtsoft.Validator.ValidationTarget,System.Int32,System.String)">
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationMessageResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IValidationPredicate">
      <apidata name="IValidationPredicate" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Validator.AlwaysPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.CreditCardNumberPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.FunctionPredicate`1" ref="true" />
        <type api="T:Gehtsoft.Validator.IsEnumValueCorrectPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrEmptyPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.IsNotNullOrWhitespacePredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.IsNotNullPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.IsNullPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.IsShorterThanPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.NeverPredicate" ref="true" />
        <type api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expressionCompilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IValidationPredicateAsync">
      <apidata name="IValidationPredicateAsync" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Gehtsoft.Validator.IValidationPredicateAsync.ValidateAsync(System.Void,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IValidationPredicateAsync.ValidateAsync(System.Void,System.Boolean)">
      <apidata name="ValidateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Void" ref="false" />
        </parameter>
        <parameter name="token">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationPredicateAsync" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IValidationRule">
      <apidata name="IValidationRule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </implementors>
      <elements>
        <element api="P:Gehtsoft.Validator.IValidationRule.Target" />
        <element api="P:Gehtsoft.Validator.IValidationRule.Validator" />
        <element api="P:Gehtsoft.Validator.IValidationRule.WhenValue" />
        <element api="P:Gehtsoft.Validator.IValidationRule.WhenEntity" />
        <element api="P:Gehtsoft.Validator.IValidationRule.UnlessValue" />
        <element api="P:Gehtsoft.Validator.IValidationRule.UnlessEntity" />
        <element api="P:Gehtsoft.Validator.IValidationRule.Code" />
        <element api="P:Gehtsoft.Validator.IValidationRule.Message" />
        <element api="P:Gehtsoft.Validator.IValidationRule.HasAnotherValidator" />
        <element api="P:Gehtsoft.Validator.IValidationRule.AnotherValidator" />
        <element api="P:Gehtsoft.Validator.IValidationRule.IgnoreOnClient" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.AnotherValidator">
      <apidata name="AnotherValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AnotherValidator" />
      <returns>
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.Code">
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Code" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.HasAnotherValidator">
      <apidata name="HasAnotherValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasAnotherValidator" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.IgnoreOnClient">
      <apidata name="IgnoreOnClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IgnoreOnClient" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Target" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.UnlessEntity">
      <apidata name="UnlessEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UnlessEntity" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.UnlessValue">
      <apidata name="UnlessValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UnlessValue" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.Validator">
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Validator" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.WhenEntity">
      <apidata name="WhenEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_WhenEntity" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationRule.WhenValue">
      <apidata name="WhenValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_WhenValue" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IValidationTarget">
      <apidata name="IValidationTarget" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </implementors>
      <elements>
        <element api="P:Gehtsoft.Validator.IValidationTarget.TargetName" />
        <element api="P:Gehtsoft.Validator.IValidationTarget.ValueType" />
        <element api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationTarget.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.IValidationTarget.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.IValidator`1">
      <apidata name="IValidator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.Validator.AbstractValidator`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Validator.IValidator`1.Validate(`0)" />
        <element api="M:Gehtsoft.Validator.IBaseValidator.Validate(System.Object)" />
        <element api="P:Gehtsoft.Validator.IBaseValidator.ValidateType" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension.GetJsRules(Gehtsoft.Validator.IBaseValidator,System.Type)" source="extension">
          <apidata name="GetJsRules" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="compilerType">
              <type api="T:System.Type" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator.JSConvertor" />
            <type api="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.IValidator`1.Validate(`0)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <template name="T" index="0" api="T:Gehtsoft.Validator.IValidator`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.IValidator`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.MustBeInRangeAttribute">
      <apidata name="MustBeInRangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.MustBeInRangeAttribute.#ctor" />
        <element api="P:Gehtsoft.Validator.MustBeInRangeAttribute.Mininum" />
        <element api="P:Gehtsoft.Validator.MustBeInRangeAttribute.MinimumInclusive" />
        <element api="P:Gehtsoft.Validator.MustBeInRangeAttribute.Maximum" />
        <element api="P:Gehtsoft.Validator.MustBeInRangeAttribute.MaximumInclusive" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.MustBeInRangeAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeInRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.MustBeInRangeAttribute.Maximum">
      <apidata name="Maximum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Maximum" />
      <setter name="set_Maximum" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeInRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.MustBeInRangeAttribute.MaximumInclusive">
      <apidata name="MaximumInclusive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumInclusive" />
      <setter name="set_MaximumInclusive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeInRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.MustBeInRangeAttribute.MinimumInclusive">
      <apidata name="MinimumInclusive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumInclusive" />
      <setter name="set_MinimumInclusive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeInRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.MustBeInRangeAttribute.Mininum">
      <apidata name="Mininum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mininum" />
      <setter name="set_Mininum" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeInRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.MustBeNotEmptyAttribute">
      <apidata name="MustBeNotEmptyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.MustBeNotEmptyAttribute.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.MustBeNotEmptyAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeNotEmptyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.MustBeNotNullAttribute">
      <apidata name="MustBeNotNullAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.MustBeNotNullAttribute.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.MustBeNotNullAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeNotNullAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.MustBeNotNullOrWhitespaceAttribute">
      <apidata name="MustBeNotNullOrWhitespaceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.MustBeNotNullOrWhitespaceAttribute.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.MustBeNotNullOrWhitespaceAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeNotNullOrWhitespaceAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.MustBeShorterThanAttribute">
      <apidata name="MustBeShorterThanAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.MustBeShorterThanAttribute.#ctor" />
        <element api="M:Gehtsoft.Validator.MustBeShorterThanAttribute.#ctor(System.Int32)" />
        <element api="P:Gehtsoft.Validator.MustBeShorterThanAttribute.Length" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.MustBeShorterThanAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeShorterThanAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.MustBeShorterThanAttribute.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeShorterThanAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.MustBeShorterThanAttribute.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Length" />
      <setter name="set_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustBeShorterThanAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.MustMatchAttribute">
      <apidata name="MustMatchAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.MustMatchAttribute.#ctor" />
        <element api="M:Gehtsoft.Validator.MustMatchAttribute.#ctor(System.String)" />
        <element api="P:Gehtsoft.Validator.MustMatchAttribute.Pattern" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.MustMatchAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustMatchAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.MustMatchAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustMatchAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.MustMatchAttribute.Pattern">
      <apidata name="Pattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Pattern" />
      <setter name="set_Pattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.MustMatchAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.NeverPredicate">
      <apidata name="NeverPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.NeverPredicate.#ctor(System.Type)" />
        <element api="M:Gehtsoft.Validator.NeverPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.NeverPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.NeverPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.NeverPredicate.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.NeverPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.NeverPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.NeverPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.NeverPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.NeverPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.NeverPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.NeverPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.PhoneNumberPredicate">
      <apidata name="PhoneNumberPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.DoesMatchPredicate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.PhoneNumberPredicate.#ctor" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.DoesMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)" />
        <element api="P:Gehtsoft.Validator.DoesMatchPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PhoneNumberPredicate.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PhoneNumberPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.PropertyValidationArrayTarget">
      <apidata name="PropertyValidationArrayTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.PropertyValidationArrayTarget.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Validator.PropertyValidationArrayTarget.#ctor(System.Type,System.String)" />
        <element api="M:Gehtsoft.Validator.PropertyValidationArrayTarget.First(System.Object)" />
        <element api="M:Gehtsoft.Validator.PropertyValidationArrayTarget.All(System.Object)" />
        <element api="P:Gehtsoft.Validator.PropertyValidationArrayTarget.PropertyName" />
        <element api="P:Gehtsoft.Validator.PropertyValidationArrayTarget.ValueType" />
        <element api="P:Gehtsoft.Validator.PropertyValidationArrayTarget.TargetName" />
        <element api="P:Gehtsoft.Validator.PropertyValidationArrayTarget.IsProperty" />
        <element api="P:Gehtsoft.Validator.PropertyValidationArrayTarget.IsSingleValue" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationArrayTarget.#ctor(System.Type,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationArrayTarget.All(System.Object)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationArrayTarget.First(System.Object)">
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationArrayTarget.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Validator.PropertyValidationArrayTarget.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationArrayTarget.IsProperty">
      <apidata name="IsProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsProperty">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationArrayTarget.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationArrayTarget.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.PropertyName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationArrayTarget.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationArrayTarget.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.PropertyValidationTarget">
      <apidata name="PropertyValidationTarget" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.PropertyValidationTarget.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Validator.PropertyValidationTarget.#ctor(System.Type,System.String)" />
        <element api="M:Gehtsoft.Validator.PropertyValidationTarget.First(System.Object)" />
        <element api="M:Gehtsoft.Validator.PropertyValidationTarget.All(System.Object)" />
        <element api="P:Gehtsoft.Validator.PropertyValidationTarget.PropertyName" />
        <element api="P:Gehtsoft.Validator.PropertyValidationTarget.ValueType" />
        <element api="P:Gehtsoft.Validator.PropertyValidationTarget.TargetName" />
        <element api="P:Gehtsoft.Validator.PropertyValidationTarget.IsProperty" />
        <element api="P:Gehtsoft.Validator.PropertyValidationTarget.IsSingleValue" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationTarget.#ctor(System.Type,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationTarget.All(System.Object)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationTarget.First(System.Object)">
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.PropertyValidationTarget.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Validator.PropertyValidationTarget.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationTarget.IsProperty">
      <apidata name="IsProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsProperty">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationTarget.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationTarget.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.PropertyName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationTarget.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.PropertyValidationTarget.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Gehtsoft.Validator.ValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.SQLInjectionPredicate">
      <apidata name="SQLInjectionPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Validator.DoesNotMatchPredicate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.SQLInjectionPredicate.#ctor" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.RemoteScript(System.Type)" />
        <element api="M:Gehtsoft.Validator.DoesNotMatchPredicate.Suffix(System.Text.RegularExpressions.RegexOptions)" />
        <element api="P:Gehtsoft.Validator.DoesNotMatchPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.SQLInjectionPredicate.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.SQLInjectionPredicate" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationFailure">
      <apidata name="ValidationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationFailure.ToString" />
        <element api="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.String,System.Int32,System.String)" />
        <element api="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.Int32,System.String)" />
        <element api="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.Int32)" />
        <element api="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.String)" />
        <element api="P:Gehtsoft.Validator.ValidationFailure.Name" />
        <element api="P:Gehtsoft.Validator.ValidationFailure.Code" />
        <element api="P:Gehtsoft.Validator.ValidationFailure.Path" />
        <element api="P:Gehtsoft.Validator.ValidationFailure.Message" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailure.#ctor(System.String,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationFailure.Code">
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Code" />
      <setter name="set_Code" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationFailure.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationFailure.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationFailure.Path">
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailure.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationFailureCollection">
      <apidata name="ValidationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationFailureCollection.#ctor" />
        <element api="M:Gehtsoft.Validator.ValidationFailureCollection.Add(Gehtsoft.Validator.ValidationFailure)" />
        <element api="M:Gehtsoft.Validator.ValidationFailureCollection.GetEnumerator" />
        <element api="M:Gehtsoft.Validator.ValidationFailureCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.Validator.ValidationFailureCollection.Count" />
        <element api="P:Gehtsoft.Validator.ValidationFailureCollection.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Find(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.Int32)" source="extension">
          <apidata name="Find" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="code">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator" />
            <type api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Contains(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.Int32)" source="extension">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="code">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator" />
            <type api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Contains(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.String)" source="extension">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Validator" />
            <type api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollection.Add(Gehtsoft.Validator.ValidationFailure)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationFailureCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationFailureCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationFailureCollectionExtension">
      <apidata name="ValidationFailureCollectionExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Find(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.Int32)" />
        <element api="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Contains(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.Int32)" />
        <element api="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Contains(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Contains(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.Int32)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Contains(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationFailureCollectionExtension.Find(Gehtsoft.Validator.ValidationFailureCollection,System.String,System.Int32)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationFailure" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationFailureCollectionExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationMessageNullResolver">
      <apidata name="ValidationMessageNullResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationMessageResolver" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationMessageNullResolver.Resolve(System.Type,Gehtsoft.Validator.ValidationTarget,System.Int32,System.String)" />
        <element api="M:Gehtsoft.Validator.ValidationMessageNullResolver.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationMessageNullResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationMessageNullResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationMessageNullResolver.Resolve(System.Type,Gehtsoft.Validator.ValidationTarget,System.Int32,System.String)">
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationMessageResolver.Resolve(System.Type,Gehtsoft.Validator.ValidationTarget,System.Int32,System.String)">
          <type api="T:Gehtsoft.Validator.IValidationMessageResolver" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationMessageNullResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationMessageResolverFactory">
      <apidata name="ValidationMessageResolverFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationMessageResolverFactory.GetResolver(System.Type)" />
        <element api="M:Gehtsoft.Validator.ValidationMessageResolverFactory.SetResolverFor(System.Type,Gehtsoft.Validator.IValidationMessageResolver)" />
        <element api="M:Gehtsoft.Validator.ValidationMessageResolverFactory.SetResolverFor``1(Gehtsoft.Validator.IValidationMessageResolver)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationMessageResolverFactory.GetResolver(System.Type)">
      <apidata name="GetResolver" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationMessageResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationMessageResolverFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationMessageResolverFactory.SetResolverFor``1(Gehtsoft.Validator.IValidationMessageResolver)">
      <apidata name="SetResolverFor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="resolver">
          <type api="T:Gehtsoft.Validator.IValidationMessageResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationMessageResolverFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationMessageResolverFactory.SetResolverFor(System.Type,Gehtsoft.Validator.IValidationMessageResolver)">
      <apidata name="SetResolverFor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="resolver">
          <type api="T:Gehtsoft.Validator.IValidationMessageResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationMessageResolverFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationPredicateCollection">
      <apidata name="ValidationPredicateCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationPredicateCollection.GetEnumerator" />
        <element api="M:Gehtsoft.Validator.ValidationPredicateCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.Validator.ValidationPredicateCollection.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidationPredicateCollection.Count" />
        <element api="P:Gehtsoft.Validator.ValidationPredicateCollection.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationPredicateCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationPredicateCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationPredicateCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationPredicateCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationPredicateCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationPredicateCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationPredicateCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationPredicateCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationPredicateCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationPredicateCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationResult">
      <apidata name="ValidationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationResult.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidationResult.IsValid" />
        <element api="P:Gehtsoft.Validator.ValidationResult.Failures" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationResult.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationResult.Failures">
      <apidata name="Failures" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Failures" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationResult.IsValid">
      <apidata name="IsValid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsValid" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationResult" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationRule">
      <apidata name="ValidationRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.GenericValidationRule`2" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
      </implements>
      <elements>
        <element api="P:Gehtsoft.Validator.ValidationRule.EntityType" />
        <element api="P:Gehtsoft.Validator.ValidationRule.RuleValueType" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Target" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Gehtsoft#Validator#IValidationRule#Target" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Validator" />
        <element api="P:Gehtsoft.Validator.ValidationRule.WhenValue" />
        <element api="P:Gehtsoft.Validator.ValidationRule.WhenEntity" />
        <element api="P:Gehtsoft.Validator.ValidationRule.UnlessValue" />
        <element api="P:Gehtsoft.Validator.ValidationRule.UnlessEntity" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Code" />
        <element api="P:Gehtsoft.Validator.ValidationRule.Message" />
        <element api="P:Gehtsoft.Validator.ValidationRule.HasAnotherValidator" />
        <element api="P:Gehtsoft.Validator.ValidationRule.AnotherValidatorType" />
        <element api="P:Gehtsoft.Validator.ValidationRule.IgnoreOnClient" />
        <element api="P:Gehtsoft.Validator.ValidationRule.AnotherValidatorInstance" />
        <element api="P:Gehtsoft.Validator.ValidationRule.AnotherValidator" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.AnotherValidator">
      <apidata name="AnotherValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AnotherValidator" />
      <returns>
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.AnotherValidator">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.AnotherValidatorInstance">
      <apidata name="AnotherValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AnotherValidatorInstance" />
      <setter name="set_AnotherValidatorInstance" />
      <returns>
        <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.AnotherValidatorType">
      <apidata name="AnotherValidatorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AnotherValidatorType" />
      <setter name="set_AnotherValidatorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.Code">
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Code" />
      <setter name="set_Code" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.Code">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.EntityType">
      <apidata name="EntityType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityType" />
      <setter name="set_EntityType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.Gehtsoft#Validator#IValidationRule#Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_Gehtsoft.Validator.IValidationRule.Target" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.Target">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.HasAnotherValidator">
      <apidata name="HasAnotherValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_HasAnotherValidator" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.HasAnotherValidator">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.IgnoreOnClient">
      <apidata name="IgnoreOnClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreOnClient" />
      <setter name="set_IgnoreOnClient" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.IgnoreOnClient">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.Message">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.RuleValueType">
      <apidata name="RuleValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RuleValueType" />
      <setter name="set_RuleValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.UnlessEntity">
      <apidata name="UnlessEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UnlessEntity" />
      <setter name="set_UnlessEntity" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.UnlessEntity">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.UnlessValue">
      <apidata name="UnlessValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UnlessValue" />
      <setter name="set_UnlessValue" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.UnlessValue">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.Validator">
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Validator" />
      <setter name="set_Validator" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.Validator">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.WhenEntity">
      <apidata name="WhenEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WhenEntity" />
      <setter name="set_WhenEntity" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.WhenEntity">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRule.WhenValue">
      <apidata name="WhenValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WhenValue" />
      <setter name="set_WhenValue" />
      <returns>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationRule.WhenValue">
          <type api="T:Gehtsoft.Validator.IValidationRule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationRuleBuilder">
      <apidata name="ValidationRuleBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.GenericValidationRuleBuilder`2" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.#ctor(Gehtsoft.Validator.BaseValidator,Gehtsoft.Validator.ValidationRule)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.Must(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenValue(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.UnlessValue(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenEntity(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.UnlessEntity(Gehtsoft.Validator.IValidationPredicate)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.Null" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.NotNull" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.NotNullOrEmpty" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.NotNullOrWhitespace" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.ShorterThan(System.Int32)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.DoesMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.DoesNotMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.EnumIsCorrect" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.EnumIsCorrect(System.Type)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WithCode(System.Int32)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.ServerOnly" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WithMessage(System.String)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.ValidateUsing(System.Type)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.ValidateUsing(System.Type,System.Object[])" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.ValidateUsing(Gehtsoft.Validator.IBaseValidator)" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenNotNull" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.EmailAddress" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.NotSQLInjection" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.NotHTML" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.PhoneNumber" />
        <element api="M:Gehtsoft.Validator.ValidationRuleBuilder.CreditCardNumber" />
        <element api="P:Gehtsoft.Validator.ValidationRuleBuilder.Rule" />
        <element api="P:Gehtsoft.Validator.ValidationRuleBuilder.Validator" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.#ctor(Gehtsoft.Validator.BaseValidator,Gehtsoft.Validator.ValidationRule)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="validator">
          <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
        </parameter>
        <parameter name="validationRule">
          <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.CreditCardNumber">
      <apidata name="CreditCardNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.DoesMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})">
      <apidata name="DoesMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.DoesNotMatch(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Nullable{System.TimeSpan})">
      <apidata name="DoesNotMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.EmailAddress">
      <apidata name="EmailAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.EnumIsCorrect">
      <apidata name="EnumIsCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.EnumIsCorrect(System.Type)">
      <apidata name="EnumIsCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.Must(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="Must" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.NotHTML">
      <apidata name="NotHTML" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.NotNull">
      <apidata name="NotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.NotNullOrEmpty">
      <apidata name="NotNullOrEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.NotNullOrWhitespace">
      <apidata name="NotNullOrWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.NotSQLInjection">
      <apidata name="NotSQLInjection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.Null">
      <apidata name="Null" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.PhoneNumber">
      <apidata name="PhoneNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRuleBuilder.Rule">
      <apidata name="Rule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Rule" />
      <setter name="set_Rule" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.ServerOnly">
      <apidata name="ServerOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.ShorterThan(System.Int32)">
      <apidata name="ShorterThan" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.UnlessEntity(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="UnlessEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.UnlessValue(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="UnlessValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.ValidateUsing(Gehtsoft.Validator.IBaseValidator)">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validator">
          <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.ValidateUsing(System.Type)">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validatorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.ValidateUsing(System.Type,System.Object[])">
      <apidata name="ValidateUsing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validatorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRuleBuilder.Validator">
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Validator" />
      <setter name="set_Validator" />
      <returns>
        <type api="T:Gehtsoft.Validator.BaseValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenEntity(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="WhenEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenNotNull">
      <apidata name="WhenNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.WhenValue(Gehtsoft.Validator.IValidationPredicate)">
      <apidata name="WhenValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.WithCode(System.Int32)">
      <apidata name="WithCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleBuilder.WithMessage(System.String)">
      <apidata name="WithMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationRuleCollection">
      <apidata name="ValidationRuleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationRuleCollection.#ctor" />
        <element api="M:Gehtsoft.Validator.ValidationRuleCollection.GetEnumerator" />
        <element api="M:Gehtsoft.Validator.ValidationRuleCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.Validator.ValidationRuleCollection.Count" />
        <element api="P:Gehtsoft.Validator.ValidationRuleCollection.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRuleCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationRuleCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationRule" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationRuleCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationRuleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationTarget">
      <apidata name="ValidationTarget" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.EntityValidationTarget" ref="true" />
          <type api="T:Gehtsoft.Validator.FunctionValidationArrayTarget`2" ref="true" />
          <type api="T:Gehtsoft.Validator.FunctionValidationTarget`2" ref="true" />
          <type api="T:Gehtsoft.Validator.PropertyValidationArrayTarget" ref="true" />
          <type api="T:Gehtsoft.Validator.PropertyValidationTarget" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)" />
        <element api="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)" />
        <element api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Validator.ValidationTarget.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.TargetName" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.ValueType" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.IsProperty" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.PropertyName" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationTarget.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationTarget.All(System.Object)">
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
            <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationTarget.First(System.Object)">
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Validator.ValidationTarget.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.IsProperty">
      <apidata name="IsProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.IsSingleValue">
      <apidata name="IsSingleValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.IsSingleValue">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.PropertyName">
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.TargetName">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.ValueType">
      <apidata name="ValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValueType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationTarget.ValueType">
          <type api="T:Gehtsoft.Validator.IValidationTarget" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidationTarget.ValidationValue">
      <apidata name="ValidationValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidationTarget.ValidationValue.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.ValidationValue.Value" />
        <element api="P:Gehtsoft.Validator.ValidationTarget.ValidationValue.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidationTarget.ValidationValue.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.ValidationValue.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidationTarget.ValidationValue.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidationTarget.ValidationValue" ref="true">
          <type api="T:Gehtsoft.Validator.ValidationTarget" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValidatorAttributeBase">
      <apidata name="ValidatorAttributeBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Validator.MustBeNotEmptyAttribute" ref="true" />
          <type api="T:Gehtsoft.Validator.MustBeInRangeAttribute" ref="true" />
          <type api="T:Gehtsoft.Validator.MustBeNotNullAttribute" ref="true" />
          <type api="T:Gehtsoft.Validator.MustBeNotNullOrWhitespaceAttribute" ref="true" />
          <type api="T:Gehtsoft.Validator.MustBeShorterThanAttribute" ref="true" />
          <type api="T:Gehtsoft.Validator.MustMatchAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.ValidatorAttributeBase.#ctor" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage" />
        <element api="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValidatorAttributeBase.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidatorAttributeBase.ForElement">
      <apidata name="ForElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForElement" />
      <setter name="set_ForElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidatorAttributeBase.WidthCode">
      <apidata name="WidthCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WidthCode" />
      <setter name="set_WidthCode" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValidatorAttributeBase.WithMessage">
      <apidata name="WithMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WithMessage" />
      <setter name="set_WithMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValidatorAttributeBase" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.ValueIsBetweenPredicate">
      <apidata name="ValueIsBetweenPredicate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
      </implements>
      <elements>
        <element api="F:Gehtsoft.Validator.ValueIsBetweenPredicate.mJavaScript" />
        <element api="M:Gehtsoft.Validator.ValueIsBetweenPredicate.#ctor(System.Type,System.Object,System.Boolean,System.Object,System.Boolean)" />
        <element api="M:Gehtsoft.Validator.ValueIsBetweenPredicate.Validate(System.Object)" />
        <element api="M:Gehtsoft.Validator.ValueIsBetweenPredicate.RemoteScript(System.Type)" />
        <element api="P:Gehtsoft.Validator.ValueIsBetweenPredicate.ParameterType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValueIsBetweenPredicate.#ctor(System.Type,System.Object,System.Boolean,System.Object,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="min">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="minInclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="maxInclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Validator.ValueIsBetweenPredicate.mJavaScript">
      <apidata name="mJavaScript" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.ValueIsBetweenPredicate.ParameterType">
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Validator.IValidationPredicate.ParameterType">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValueIsBetweenPredicate.RemoteScript(System.Type)">
      <apidata name="RemoteScript" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.RemoteScript(System.Type)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.ValueIsBetweenPredicate.Validate(System.Object)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Validator.IValidationPredicate.Validate(System.Object)">
          <type api="T:Gehtsoft.Validator.IValidationPredicate" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator" />
        <type api="T:Gehtsoft.Validator.ValueIsBetweenPredicate" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Validator.JSConvertor">
      <apidata name="Gehtsoft.Validator.JSConvertor" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" />
        <element api="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension" />
        <element api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension">
      <apidata name="ConvertToJsExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension.GetJsRules(Gehtsoft.Validator.IBaseValidator,System.Type)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension.GetJsRules(Gehtsoft.Validator.IBaseValidator,System.Type)">
      <apidata name="GetJsRules" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validator">
          <type api="T:Gehtsoft.Validator.IBaseValidator" ref="true" />
        </parameter>
        <parameter name="compilerType">
          <type api="T:System.Type" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ConvertToJsExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule">
      <apidata name="JsValidatorRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.JSConvertor.JsValidatorRule.#ctor" />
        <element api="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.JsTargetName" />
        <element api="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.ArrayValidator" />
        <element api="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.JsValidationExpression" />
        <element api="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.JsWhenExpression" />
        <element api="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.ErrorMessage" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.JsValidatorRule.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.ArrayValidator">
      <apidata name="ArrayValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ArrayValidator" />
      <setter name="set_ArrayValidator" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.ErrorMessage">
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorMessage" />
      <setter name="set_ErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.JsTargetName">
      <apidata name="JsTargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_JsTargetName" />
      <setter name="set_JsTargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.JsValidationExpression">
      <apidata name="JsValidationExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_JsValidationExpression" />
      <setter name="set_JsValidationExpression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.JSConvertor.JsValidatorRule.JsWhenExpression">
      <apidata name="JsWhenExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_JsWhenExpression" />
      <setter name="set_JsWhenExpression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.JsValidatorRule" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler">
      <apidata name="ValidationExpressionCompiler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.#ctor(System.Linq.Expressions.LambdaExpression,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddLambdaParameter(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddParameter(System.Linq.Expressions.ParameterExpression)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression,System.Boolean)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddCustomMemberAccess(System.Func`3)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddMemberAccess(System.Linq.Expressions.MemberExpression)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddCustomCall(System.Func`3)" />
        <element api="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddCall(System.Linq.Expressions.MethodCallExpression)" />
        <element api="P:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.InLambdaParameter" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.WalkExpression(System.Linq.Expressions.Expression)">
          <apidata name="WalkExpression" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddArrayLength(System.Linq.Expressions.UnaryExpression)">
          <apidata name="AddArrayLength" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConditional(System.Linq.Expressions.ConditionalExpression)">
          <apidata name="AddConditional" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddBinary(System.String,System.Linq.Expressions.BinaryExpression)">
          <apidata name="AddBinary" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="function">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddUnary(System.String,System.Linq.Expressions.UnaryExpression)">
          <apidata name="AddUnary" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="function">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConstant(System.Linq.Expressions.ConstantExpression)">
          <apidata name="AddConstant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.GetExpressionValue(System.Linq.Expressions.Expression,System.Object@)">
          <apidata name="GetExpressionValue" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </parameter>
            <parameter name="returnValue" out="true">
              <referenceTo>
                <type api="T:System.Object" ref="true" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.IsExpressionRootsInParameter(System.Linq.Expressions.Expression)">
          <apidata name="IsExpressionRootsInParameter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddArrayIndex(System.Linq.Expressions.BinaryExpression)">
          <apidata name="AddArrayIndex" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConvert(System.Linq.Expressions.UnaryExpression)">
          <apidata name="AddConvert" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.Equals(Gehtsoft.ExpressionToJs.ExpressionCompiler)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="other">
              <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.IEquatable`1.Equals(`0)">
              <type api="T:System.IEquatable`1" ref="true">
                <specialization>
                  <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.Equals(System.Linq.Expressions.Expression)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="other">
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.IEquatable`1.Equals(`0)">
              <type api="T:System.IEquatable`1" ref="true">
                <specialization>
                  <type api="T:System.Linq.Expressions.Expression" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Gehtsoft.ExpressionToJs.ExpressionCompiler.ReturnType">
          <apidata name="ReturnType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ReturnType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="P:Gehtsoft.ExpressionToJs.ExpressionCompiler.JavaScriptExpression">
          <apidata name="JavaScriptExpression" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_JavaScriptExpression" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.ExpressionToJs" />
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.#ctor(System.Linq.Expressions.LambdaExpression,System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lambdaExpression">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
        <parameter name="entityParameterIndex">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="valueParameterIndex">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddCall(System.Linq.Expressions.MethodCallExpression)">
      <apidata name="AddCall" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddCall(System.Linq.Expressions.MethodCallExpression)">
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddCustomCall(System.Func`3)">
      <apidata name="AddCustomCall" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Func`3" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddCustomMemberAccess(System.Func`3)">
      <apidata name="AddCustomMemberAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Func`3" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddLambdaParameter(System.Linq.Expressions.LambdaExpression)">
      <apidata name="AddLambdaParameter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddLambdaParameter(System.Linq.Expressions.LambdaExpression)">
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddMemberAccess(System.Linq.Expressions.MemberExpression)">
      <apidata name="AddMemberAccess" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddMemberAccess(System.Linq.Expressions.MemberExpression)">
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddParameter(System.Linq.Expressions.ParameterExpression)">
      <apidata name="AddParameter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddParameter(System.Linq.Expressions.ParameterExpression)">
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parameterExpression">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression)">
      <apidata name="AddParameterAccess" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression)">
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression,System.Boolean)">
      <apidata name="AddParameterAccess" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="initial">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler.InLambdaParameter">
      <apidata name="InLambdaParameter" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_InLambdaParameter" />
      <setter name="set_InLambdaParameter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Validator" module="Gehtsoft.Validator" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Validator.JSConvertor" />
        <type api="T:Gehtsoft.Validator.JSConvertor.ValidationExpressionCompiler" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>